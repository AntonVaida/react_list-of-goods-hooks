{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","resultGoodsList","goods","visibleGoods","sort","goodA","goodB","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","current","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAoCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAAmBH,EAASI,MAA5D,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAkB,GAAtD,mBAAOI,EAAP,KAAmBC,EAAnB,KAoBMC,EA/CD,SACLC,EADK,GAGJ,IADCL,EACF,EADEA,SAAUE,EACZ,EADYA,WAENI,EAAY,YAAOD,GAczB,OAZAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQT,GACN,KAAKL,EAASe,QACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKd,EAASiB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAITX,EACKI,EAAaQ,UAGfR,EAyBiBS,CACtBnB,EACA,CAAEI,WAAUE,eAGd,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBAAkB,CAChB,WAAYlB,IAAaL,EAASe,UAGtCS,QAhCe,WACrBlB,EAAYN,EAASe,UAwBjB,iCAYA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBAAqB,CACnB,WAAYlB,IAAaL,EAASiB,SAGtCO,QAxCa,WACnBlB,EAAYN,EAASiB,SAgCjB,4BAYA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBAAqB,CACnB,YAAahB,IAGjBiB,QAhDY,WAClBhB,GAAc,SAAAiB,GAAO,OAAKA,MAwCtB,sBAYEpB,IAAaL,EAASI,MAAQG,IAC9B,wBACEe,KAAK,SACLD,UAAU,4BACVG,QArDQ,WAChBlB,EAAYN,EAASI,MACrBI,GAAc,IAgDR,sBAUJ,6BAEIC,EAAgBiB,KAAI,SAAAC,GAAI,OACtB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCnIpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.eb5963ef.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((goodA, goodB) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return goodA.localeCompare(goodB);\n\n      case SortType.LENGTH:\n        return goodA.length - goodB.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState<SortType>(SortType.NONE);\n  const [isReversed, setIsReversed] = useState<boolean>(false);\n\n  // eslint-disable-next-line react/sort-comp\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const makeReverse = () => {\n    setIsReversed(current => !current);\n  };\n\n  const makeReset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const resultGoodsList = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info', {\n              'is-light': sortType !== SortType.ALPABET,\n            },\n          )}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning', {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={makeReverse}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={makeReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {\n          resultGoodsList.map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}