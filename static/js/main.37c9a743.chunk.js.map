{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","resultGoodsList","goods","resultList","visibleGoods","ALPABET","sort","goodA","goodB","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAgB,WAC3B,MAAgCC,mBAAmBH,EAASI,MAA5D,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAkB,GAAtD,mBAAOI,EAAP,KAAmBC,EAAnB,KAoBMC,EArDD,SACLC,EADK,GAGJ,IAEGC,EAHFN,EACF,EADEA,SAAUE,EACZ,EADYA,WAENK,EAAY,YAAOF,GAGzB,OAAQL,GACN,KAAKL,EAASa,QACZF,EAAaC,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAC7BD,EAAME,cAAcD,MAEtB,MAEF,KAAKhB,EAASkB,OACZP,EAAaC,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAC7BD,EAAMI,OAASH,EAAMG,UAEvB,MACF,QACER,EAAaC,EAIjB,OAAIL,EACKI,EAAWS,UAGbT,EAyBiBU,CACtBpB,EACA,CAAEI,WAAUE,eAGd,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBAAkB,CAChB,WAAYnB,IAAaL,EAASa,UAGtCY,QAhCe,WACrBnB,EAAYN,EAASa,UAwBjB,iCAYA,wBACEU,KAAK,SACLD,UAAWE,IACT,oBAAqB,CACnB,WAAYnB,IAAaL,EAASkB,SAGtCO,QAxCa,WACnBnB,EAAYN,EAASkB,SAgCjB,4BAYA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBAAqB,CACnB,YAAajB,IAGjBkB,QAhDY,WAClBjB,GAAeD,IAwCX,sBAYEF,IAAaL,EAASI,MAAQG,IAC9B,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QArDQ,WAChBnB,EAAYN,EAASI,MACrBI,GAAc,IAgDR,sBAUJ,6BAEIC,EAAgBiB,KAAI,SAAAC,GAAI,OACtB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCzIpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.37c9a743.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n  let resultList;\n\n  switch (sortType) {\n    case SortType.ALPABET:\n      resultList = visibleGoods.sort((goodA, goodB) => (\n        goodA.localeCompare(goodB)\n      ));\n      break;\n\n    case SortType.LENGTH:\n      resultList = visibleGoods.sort((goodA, goodB) => (\n        goodA.length - goodB.length\n      ));\n      break;\n    default:\n      resultList = visibleGoods;\n      break;\n  }\n\n  if (isReversed) {\n    return resultList.reverse();\n  }\n\n  return resultList;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState<SortType>(SortType.NONE);\n  const [isReversed, setIsReversed] = useState<boolean>(false);\n\n  // eslint-disable-next-line react/sort-comp\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const makeReverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const makeReset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const resultGoodsList = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info', {\n              'is-light': sortType !== SortType.ALPABET,\n            },\n          )}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning', {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={makeReverse}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={makeReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {\n          resultGoodsList.map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}